============ FAILURE ============

=> Source:
f({ set foo(a) { return; } });

=> Expected:
[
    NoUnusedVars {
        var: "a",
        declared: ast::Span{12,13},
    },
]

=> Got:
[
    NoUndef {
        var: "f",
        span: ast::Span{0,1},
    },
]

=> Inputs:
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 187}, .value = "f"}],
insert inputs::Property[inputs::Property{.expr_id = ast::ExprId{.id = 188}, .key = ddlog_std::Some{.x = ast::IdentKey{.ident = ast::Spanned{.data = "foo", .span = ast::Span{.start = 8, .end = 11}}}}, .val = ddlog_std::Some{.x = ast::PropSetter{.params = ddlog_std::Some{.x = [ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "a", .span = ast::Span{.start = 12, .end = 13}}}}]}}}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 189}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 187}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 188}]}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 98}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 189}}}, .scope = ast::Scope{.id = 96}, .span = ast::Span{.start = 0, .end = 30}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4664}, .name = "Function"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4694}, .name = "WeakSet"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4714}, .name = "valueOf"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4712}, .name = "undefined"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4677}, .name = "RangeError"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4661}, .name = "FinalizationRegistry"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4655}, .name = "BigUint64Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4680}, .name = "RegExp"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4707}, .name = "parseFloat"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4672}, .name = "NaN"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4681}, .name = "Set"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4669}, .name = "JSON"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4665}, .name = "Infinity"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4663}, .name = "Float64Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4705}, .name = "isNaN"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4659}, .name = "Error"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4702}, .name = "globalThis"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4652}, .name = "Atomics"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4682}, .name = "SharedArrayBuffer"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4678}, .name = "ReferenceError"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4708}, .name = "parseInt"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4671}, .name = "Math"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4674}, .name = "Object"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4686}, .name = "TypeError"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4695}, .name = "constructor"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4699}, .name = "encodeURIComponent"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4691}, .name = "Uint8ClampedArray"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4685}, .name = "SyntaxError"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4673}, .name = "Number"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4667}, .name = "Int32Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4660}, .name = "EvalError"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4684}, .name = "Symbol"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4690}, .name = "Uint8Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4706}, .name = "isPrototypeOf"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4713}, .name = "unescape"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4710}, .name = "toLocaleString"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4651}, .name = "ArrayBuffer"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4697}, .name = "decodeURIComponent"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4701}, .name = "eval"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4675}, .name = "Promise"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4654}, .name = "BigInt64Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4650}, .name = "Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4676}, .name = "Proxy"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4696}, .name = "decodeURI"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4698}, .name = "encodeURI"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4709}, .name = "propertyIsEnumerable"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4668}, .name = "Int8Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4692}, .name = "WeakMap"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4683}, .name = "String"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4670}, .name = "Map"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4688}, .name = "Uint16Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4662}, .name = "Float32Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4679}, .name = "Reflect"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4658}, .name = "Date"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4711}, .name = "toString"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4689}, .name = "Uint32Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4656}, .name = "Boolean"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4703}, .name = "hasOwnProperty"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4687}, .name = "URIError"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4693}, .name = "WeakRef"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4704}, .name = "isFinite"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4657}, .name = "DataView"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4653}, .name = "BigInt"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4666}, .name = "Int16Array"}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4700}, .name = "escape"}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 189}, .kind = ast::ExprCall{}, .scope = ast::Scope{.id = 96}, .span = ast::Span{.start = 0, .end = 29}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 188}, .kind = ast::ExprObject{}, .scope = ast::Scope{.id = 96}, .span = ast::Span{.start = 2, .end = 28}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 187}, .kind = ast::ExprNameRef{}, .scope = ast::Scope{.id = 96}, .span = ast::Span{.start = 0, .end = 1}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::Scope{.id = 96}, .child = ast::Scope{.id = 96}}],
insert inputs::EveryScope[ast::Scope{.id = 96}],


=> Outputs:
Outputs {
    inner: InnerOutputs {
        typeof_undef_always_undef: {},
        invalid_name_use: {
            InvalidNameUse{"f",ast::Scope{96},ast::Span{0,1}}: 1,
        },
        var_usage_before_decl: {},
        unused_variables: {},
        output_file: Mutex {
            data: Some(
                File {
                    handle: 0x00000000000000e0,
                    path: "\\\\?\\G:\\Users\\Chase\\Code\\Rust\\RSLint\\crates\\rslint_scope\\output.log\\no_unused_vars-38\\state",
                },
            ),
        },
    },
}

============ END FAILURE ============

