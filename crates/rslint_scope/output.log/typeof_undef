Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 2}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 2}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 2}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 2}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 2}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 2}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 2}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 2}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 2}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 2}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 2}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 2}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 2}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 2}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 2}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 2}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 2}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 2}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 2}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 2}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 2}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 2}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 2}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 2}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 2}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 2}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 2}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 2}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 2}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 2}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 2}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 2}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 2}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 2}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 2}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 2}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 2}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 2}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 2}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 2}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 2}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 2}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 2}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 2}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 2}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 2}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 2}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 2}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 2}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 2}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 2}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 2}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 2}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 2}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 2}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 2}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 2}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 2}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 2}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 2}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 2}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 2}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 2}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 2}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 2}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 6}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 6}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 6}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 6}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 6}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 6}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 6}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 6}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 6}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 6}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 6}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 6}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 6}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 6}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 6}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 6}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 6}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 6}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 6}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 6}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 6}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 6}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 6}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 6}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 6}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 6}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 6}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 6}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 6}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 6}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 6}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 6}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 6}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 6}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 6}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 6}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 6}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 6}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 6}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 6}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 6}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 6}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 6}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 6}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 6}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 6}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 6}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 6}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 6}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 6}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 6}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 6}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 6}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 6}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 6}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 6}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 6}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 6}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 6}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 6}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 6}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 6}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 6}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 6}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 6}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 8}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 8}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 8}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 8}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 8}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 8}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 8}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 8}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 8}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 8}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 8}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 8}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 8}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 8}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 8}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 8}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 8}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 8}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 8}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 8}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 8}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 8}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 8}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 8}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 8}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 8}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 8}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 8}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 8}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 8}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 8}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 8}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 8}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 8}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 8}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 8}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 8}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 8}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 8}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 8}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 8}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 8}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 8}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 8}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 8}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 8}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 8}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 8}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 8}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 8}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 8}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 8}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 8}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 8}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 8}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 8}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 8}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 8}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 8}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 8}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 8}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 8}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 8}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 8}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 8}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 0}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 0}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 0}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 0}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 0}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 0}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 0}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 0}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 0}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 0}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 0}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 0}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 0}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 0}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 0}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 0}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 0}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 0}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 0}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 0}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 0}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 0}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 0}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 0}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 0}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 0}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 0}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 0}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 0}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 0}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 0}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 0}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 0}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 0}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 0}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 0}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 0}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 0}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 0}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 0}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 0}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 0}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 0}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 0}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 0}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 0}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 0}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 0}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 0}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 0}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 0}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 0}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 0}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 0}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 0}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 0}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 0}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 0}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 0}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 0}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 0}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 0}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 0}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 0}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 0}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 3}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 3}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 3}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 3}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 3}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 3}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 3}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 3}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 3}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 3}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 3}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 3}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 3}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 3}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 3}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 3}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 3}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 3}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 3}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 3}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 3}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 3}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 3}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 3}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 3}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 3}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 3}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 3}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 3}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 3}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 3}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 3}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 3}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 3}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 3}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 3}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 3}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 3}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 3}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 3}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 3}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 3}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 3}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 3}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 3}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 3}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 3}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 3}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 3}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 3}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 3}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 3}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 3}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 3}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 3}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 3}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 3}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 3}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 3}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 3}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 3}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 3}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 3}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 3}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 3}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 5}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 5}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 5}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 5}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 5}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 5}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 5}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 5}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 5}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 5}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 5}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 5}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 5}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 5}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 5}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 5}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 5}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 5}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 5}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 5}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 5}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 5}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 5}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 5}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 5}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 5}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 5}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 5}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 5}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 5}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 5}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 5}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 5}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 5}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 5}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 5}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 5}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 5}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 5}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 5}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 5}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 5}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 5}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 5}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 5}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 5}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 5}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 5}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 5}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 5}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 5}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 5}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 5}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 5}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 5}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 5}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 5}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 5}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 5}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 5}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 5}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 5}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 5}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 5}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 5}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 4}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 4}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 4}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 4}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 4}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 4}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 4}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 4}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 4}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 4}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 4}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 4}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 4}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 4}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 4}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 4}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 4}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 4}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 4}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 4}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 4}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 4}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 4}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 4}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 4}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 4}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 4}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 4}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 4}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 4}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 4}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 4}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 4}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 4}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 4}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 4}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 4}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 4}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 4}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 4}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 4}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 4}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 4}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 4}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 4}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 4}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 4}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 4}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 4}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 4}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 4}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 4}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 4}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 4}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 4}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 4}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 4}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 4}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 4}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 4}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 4}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 4}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 4}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 4}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 4}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 7}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 7}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 7}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 7}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 7}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 7}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 7}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 7}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 7}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 7}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 7}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 7}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 7}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 7}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 7}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 7}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 7}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 7}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 7}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 7}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 7}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 7}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 7}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 7}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 7}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 7}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 7}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 7}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 7}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 7}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 7}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 7}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 7}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 7}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 7}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 7}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 7}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 7}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 7}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 7}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 7}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 7}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 7}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 7}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 7}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 7}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 7}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 7}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 7}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 7}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 7}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 7}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 7}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 7}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 7}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 7}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 7}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 7}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 7}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 7}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 7}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 7}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 7}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 7}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 7}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 1}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 1}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 1}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 1}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 1}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 1}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 1}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 1}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 1}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 1}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 1}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 1}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 1}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 1}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 1}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 1}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 1}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 1}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 1}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 1}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 1}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 1}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 1}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 1}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 1}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 1}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 1}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 1}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 1}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 1}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 1}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 1}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 1}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 1}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 1}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 1}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 1}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 1}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 1}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 1}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 1}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 1}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 1}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 1}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 1}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 1}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 1}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 1}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 1}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 1}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 1}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 1}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 1}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 1}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 1}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 1}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 1}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 1}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 1}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 1}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 1}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 1}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 1}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 1}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 1}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::ImplicitGlobal
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 9}, .name = "Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 9}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 9}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 9}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 9}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 9}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 9}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 9}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 9}, .name = "Date", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 9}, .name = "Error", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 9}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 9}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 9}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 9}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 9}, .name = "Function", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 9}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 9}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 9}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 9}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 9}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 9}, .name = "Map", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 9}, .name = "Math", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 9}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 9}, .name = "Number", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 9}, .name = "Object", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 9}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 9}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 9}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 9}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 9}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 9}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 9}, .name = "Set", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 9}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 9}, .name = "String", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 9}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 9}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 9}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 9}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 9}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 9}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 9}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 9}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 9}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 9}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 9}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 9}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 9}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 9}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 9}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 9}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 9}, .name = "escape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 9}, .name = "eval", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 9}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 9}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 9}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 9}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 9}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 9}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 9}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 9}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 9}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 9}, .name = "toString", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 9}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 9}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}} +1
>> inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 9}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 2}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 2}} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 2}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 7, .end = 8}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 2}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 8}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 2}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 2}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 2}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 2}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 2}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 1}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 8}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 2}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 0}}} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 2}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::TypeofUndef
>> outputs::typeof_undef::TypeofUndef{.whole_expr = ast::ExprId{.id = 1}, .undefined_expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 2}} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 1}, .expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 2}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 2}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 2}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 2}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 2}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 2}}} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 2}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 2}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 2}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 2}}, .file = ast::FileId{.id = 2}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation INPUT_inputs::BinOp
>> inputs::BinOp{.expr_id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 6}, .op = ddlog_std::Some{.x = ast::BinStrictEquality{}}, .lhs = ddlog_std::Some{.x = ast::ExprId{.id = 1}}, .rhs = ddlog_std::Some{.x = ast::ExprId{.id = 2}}} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 6}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 6}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 6}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 6}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 6}} +1

Changes to relation INPUT_inputs::ExprString
>> inputs::ExprString{.expr_id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 6}, .value = "undefined"} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 6}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 11, .end = 12}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 6}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 4, .end = 12}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 6}, .kind = ast::ExprLit{.kind = ast::LitString{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 17, .end = 28}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 6}, .kind = ast::ExprBinOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 4, .end = 28}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 6}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::If
>> inputs::If{.stmt_id = ast::StmtId{.id = 1}, .file = ast::FileId{.id = 6}, .cond = ddlog_std::Some{.x = ast::ExprId{.id = 3}}, .if_body = ddlog_std::Some{.x = ast::StmtId{.id = 0}}, .else_body = ddlog_std::None{}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 6}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 6}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 6}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 6}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 6}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 6}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 6}, .kind = ast::StmtEmpty{}, .scope = ast::ScopeId{.id = 1}, .span = ast::Span{.start = 30, .end = 32}} +1
>> inputs::Statement{.id = ast::StmtId{.id = 1}, .file = ast::FileId{.id = 6}, .kind = ast::StmtIf{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 32}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 6}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 0}}} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "JSON", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "JSON", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "JSON", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "NaN", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "NaN", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "NaN", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Infinity", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Infinity", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Infinity", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "EvalError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "EvalError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "EvalError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int8Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int8Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int8Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Math", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Math", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Math", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Number", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Number", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Number", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int16Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int16Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Int16Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Float32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Map", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Map", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Map", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Object", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Object", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Object", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Promise", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Promise", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Promise", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Atomics", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Atomics", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Atomics", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Function", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Function", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Function", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Boolean", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Boolean", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Boolean", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "DataView", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "DataView", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "DataView", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Error", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Error", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Error", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Date", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Date", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Date", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "constructor", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "constructor", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "constructor", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "escape", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "escape", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "escape", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isFinite", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isFinite", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isFinite", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseFloat", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseFloat", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseFloat", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakSet", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakSet", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakSet", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURI", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURI", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURI", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURI", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURI", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURI", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Proxy", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Proxy", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Proxy", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakMap", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakMap", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakMap", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Set", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Set", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Set", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Symbol", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Symbol", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Symbol", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "URIError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "URIError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "URIError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isNaN", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isNaN", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "isNaN", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RegExp", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RegExp", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RegExp", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RangeError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RangeError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "RangeError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Reflect", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Reflect", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Reflect", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "TypeError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "TypeError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "TypeError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "eval", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "eval", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "eval", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakRef", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakRef", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "WeakRef", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "globalThis", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "globalThis", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "globalThis", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "String", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "String", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "String", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseInt", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseInt", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "parseInt", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "unescape", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "unescape", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "unescape", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "valueOf", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "valueOf", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "valueOf", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toString", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toString", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "toString", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "undefined", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "undefined", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 6}, .name = "undefined", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::TypeofUndef
>> outputs::typeof_undef::TypeofUndef{.whole_expr = ast::ExprId{.id = 1}, .undefined_expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 6}} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 1}, .expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 6}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 6}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 6}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 6}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 6}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 6}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 6}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 6}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 6}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 6}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 2}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 6}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 6}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 3}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 6}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 6}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 4}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 6}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 6}}} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 6}, .scope = ast::ScopeId{.id = 1}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 1}}, .file = ast::FileId{.id = 6}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 6}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 6}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 2}}, .file = ast::FileId{.id = 6}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 3}}, .file = ast::FileId{.id = 6}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 6}}, .file = ast::FileId{.id = 6}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 8}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 8}} +1

Changes to relation INPUT_inputs::ExprNumber
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 8}, .value = 1} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 8}, .value = 2} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 8}, .value = 3} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 8}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 8, .end = 9}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 8}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 11, .end = 12}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 8}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 14, .end = 15}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 8}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 17, .end = 18}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 8}, .kind = ast::ExprSequence{.exprs = [ast::ExprId{.id = 0}, ast::ExprId{.id = 1}, ast::ExprId{.id = 2}, ast::ExprId{.id = 3}]}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 8, .end = 18}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 8}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 4}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 7, .end = 19}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 8}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 19}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 8}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 8}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 8}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 8}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 8}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 6}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 19}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 8}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 5}}} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 8}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::TypeofUndef
>> outputs::typeof_undef::TypeofUndef{.whole_expr = ast::ExprId{.id = 6}, .undefined_expr = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 8}} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 6}, .expr = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 8}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 6}, .expr = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 8}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 6}, .expr = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 8}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 8}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 8}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 8}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 8}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 8}}} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 2}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 3}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 4}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 5}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 6}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 8}}, .file = ast::FileId{.id = 8}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 0}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 0}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 0}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 0}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 0}} +1

Changes to relation INPUT_inputs::ExprNumber
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 0}, .value = 10} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 0}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 2}, .span = ast::Span{.start = 8, .end = 10}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 0}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 19, .end = 20}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 0}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 12, .end = 20}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 0}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 0}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 0}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 0}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 0}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 3}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 0}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 0}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 0}, .kind = ast::StmtVarDecl{}, .scope = ast::ScopeId{.id = 2}, .span = ast::Span{.start = 0, .end = 11}} +1
>> inputs::Statement{.id = ast::StmtId{.id = 1}, .file = ast::FileId{.id = 0}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 2}}}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 12, .end = 20}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 0}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 1}}} +1

Changes to relation INPUT_inputs::VarDecl
>> inputs::VarDecl{.stmt_id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 0}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "a", .span = ast::Span{.start = 4, .end = 5}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 0}}, .exported = false} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "a", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "a", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "a", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "a", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "a", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "JSON", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "JSON", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "JSON", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "NaN", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "NaN", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "NaN", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Infinity", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Infinity", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Infinity", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "EvalError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "EvalError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "EvalError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int8Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int8Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int8Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Math", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Math", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Math", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Number", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Number", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Number", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int16Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int16Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Int16Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Float32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Map", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Map", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Map", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Object", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Object", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Object", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Promise", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Promise", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Promise", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Atomics", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Atomics", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Atomics", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Function", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Function", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Function", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Boolean", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Boolean", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Boolean", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "DataView", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "DataView", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "DataView", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Error", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Error", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Error", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Date", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Date", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Date", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "constructor", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "constructor", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "constructor", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "escape", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "escape", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "escape", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isFinite", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isFinite", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isFinite", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseFloat", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseFloat", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseFloat", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakSet", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakSet", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakSet", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURI", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURI", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURI", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURI", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURI", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURI", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Proxy", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Proxy", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Proxy", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakMap", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakMap", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakMap", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Set", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Set", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Set", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Symbol", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Symbol", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Symbol", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "URIError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "URIError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "URIError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isNaN", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isNaN", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "isNaN", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RegExp", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RegExp", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RegExp", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RangeError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RangeError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "RangeError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Reflect", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Reflect", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Reflect", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "TypeError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "TypeError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "TypeError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "eval", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "eval", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "eval", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakRef", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakRef", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "WeakRef", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "globalThis", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "globalThis", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "globalThis", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "String", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "String", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "String", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseInt", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseInt", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "parseInt", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "unescape", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "unescape", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "unescape", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "valueOf", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "valueOf", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "valueOf", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toString", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toString", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "toString", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "undefined", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "undefined", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 0}, .name = "undefined", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 2}, .expr = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 0}} +1

Changes to relation outputs::unused_vars::VariableUsages
>> outputs::unused_vars::VariableUsages{.file = ast::FileId{.id = 0}, .name = "a", .scope = ast::ScopeId{.id = 3}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 0}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 3}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 0}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 0}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 0}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 0}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 0}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 2}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 0}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 0}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 3}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 0}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 0}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 4}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 0}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 0}}} +1

Changes to relation scopes::IsHoistable
>> scopes::IsHoistable{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 0}, .hoistable = true} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 0}, .scope = ast::ScopeId{.id = 2}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 1}}, .file = ast::FileId{.id = 0}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 0}, .scope = ast::ScopeId{.id = 2}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 0}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 2}}, .file = ast::FileId{.id = 0}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 0}}, .file = ast::FileId{.id = 0}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation variable_decl::VariableDecl
>> variable_decl::VariableDecl{.stmt = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 0}, .kind = variable_decl::VarDeclVar{}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "a", .span = ast::Span{.start = 4, .end = 5}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 0}}, .exported = false} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 3}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 3}} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 3}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 8, .end = 9}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 3}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 0}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 7, .end = 10}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 3}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 10}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 3}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 3}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 3}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 3}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 3}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 2}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 10}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 3}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 1}}} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 3}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::TypeofUndef
>> outputs::typeof_undef::TypeofUndef{.whole_expr = ast::ExprId{.id = 2}, .undefined_expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 3}} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 2}, .expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 3}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 2}, .expr = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 3}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 3}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 3}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 3}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 3}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 3}}} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 3}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 3}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 3}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 2}}, .file = ast::FileId{.id = 3}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 3}}, .file = ast::FileId{.id = 3}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation INPUT_inputs::BinOp
>> inputs::BinOp{.expr_id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 5}, .op = ddlog_std::Some{.x = ast::BinStrictEquality{}}, .lhs = ddlog_std::Some{.x = ast::ExprId{.id = 1}}, .rhs = ddlog_std::Some{.x = ast::ExprId{.id = 2}}} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 5}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 5}} +1

Changes to relation INPUT_inputs::ExprString
>> inputs::ExprString{.expr_id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 5}, .value = "undefined"} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 5}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 7, .end = 8}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 5}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 8}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 5}, .kind = ast::ExprLit{.kind = ast::LitString{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 13, .end = 24}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 5}, .kind = ast::ExprBinOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 24}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 5}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 5}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 5}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 5}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 5}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 3}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 24}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 5}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 0}}} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 5}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::TypeofUndef
>> outputs::typeof_undef::TypeofUndef{.whole_expr = ast::ExprId{.id = 1}, .undefined_expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 5}} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 1}, .expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 5}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 5}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 5}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 5}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 5}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 5}}} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 5}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 5}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 5}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 2}}, .file = ast::FileId{.id = 5}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 3}}, .file = ast::FileId{.id = 5}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 5}}, .file = ast::FileId{.id = 5}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 4}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 4}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 4}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 4}} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 4}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 2}, .span = ast::Span{.start = 15, .end = 16}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 4}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 2}, .span = ast::Span{.start = 8, .end = 16}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 4}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 4}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 4}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 4}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 4}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 4}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 4}, .kind = ast::StmtVarDecl{}, .scope = ast::ScopeId{.id = 2}, .span = ast::Span{.start = 0, .end = 16}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 4}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 0}}} +1

Changes to relation INPUT_inputs::VarDecl
>> inputs::VarDecl{.stmt_id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 4}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "b", .span = ast::Span{.start = 4, .end = 5}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 1}}, .exported = false} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "b", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "b", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "b", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "b", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "JSON", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "JSON", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "NaN", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "NaN", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Float64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Float64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Infinity", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Infinity", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "EvalError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "EvalError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int8Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int8Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigInt", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigInt", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Math", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Math", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Number", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Number", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int16Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Int16Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Float32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Float32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Map", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Map", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Object", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Object", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Promise", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Promise", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Atomics", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Atomics", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Function", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Function", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Boolean", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Boolean", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "DataView", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "DataView", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Error", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Error", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Date", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Date", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "constructor", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "constructor", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "escape", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "escape", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isFinite", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isFinite", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "parseFloat", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "parseFloat", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakSet", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakSet", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "encodeURI", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "encodeURI", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "decodeURI", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "decodeURI", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Proxy", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Proxy", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakMap", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakMap", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Set", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Set", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Symbol", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Symbol", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "URIError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "URIError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isNaN", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "isNaN", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "RegExp", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "RegExp", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "RangeError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "RangeError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Reflect", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Reflect", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "TypeError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "TypeError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "eval", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "eval", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakRef", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "WeakRef", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "globalThis", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "globalThis", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "String", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "String", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "parseInt", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "parseInt", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "unescape", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "unescape", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "valueOf", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "valueOf", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "toString", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "toString", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "undefined", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 4}, .name = "undefined", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::TypeofUndef
>> outputs::typeof_undef::TypeofUndef{.whole_expr = ast::ExprId{.id = 1}, .undefined_expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 4}} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 1}, .expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 4}} +1

Changes to relation outputs::unused_vars::UnusedVariables
>> outputs::unused_vars::UnusedVariables{.name = "b", .declared = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .span = ast::Span{.start = 4, .end = 5}, .file = ast::FileId{.id = 4}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 4}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 4}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 4}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 4}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 4}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 4}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 4}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 4}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 4}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 4}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 2}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 4}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 4}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 3}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 4}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 4}}} +1

Changes to relation scopes::IsHoistable
>> scopes::IsHoistable{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 4}, .hoistable = true} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 4}, .scope = ast::ScopeId{.id = 2}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 4}, .scope = ast::ScopeId{.id = 2}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 4}, .scope = ast::ScopeId{.id = 2}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 4}}, .file = ast::FileId{.id = 4}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation variable_decl::VariableDecl
>> variable_decl::VariableDecl{.stmt = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 4}, .kind = variable_decl::VarDeclVar{}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "b", .span = ast::Span{.start = 4, .end = 5}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 1}}, .exported = false} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 7}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 7}} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 7}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 13, .end = 14}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 7}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 0}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 12, .end = 15}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 7}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 1}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 11, .end = 16}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 7}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 2}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 10, .end = 17}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 7}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 3}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 9, .end = 18}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 7}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 4}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 8, .end = 19}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 7}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 5}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 7, .end = 20}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 7}, .file = ast::FileId{.id = 7}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 20}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 7}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 7}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 7}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 7}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 7}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 7}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 20}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 7}, .file = ast::FileId{.id = 7}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 6}}} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 7}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::TypeofUndef
>> outputs::typeof_undef::TypeofUndef{.whole_expr = ast::ExprId{.id = 7}, .undefined_expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 7}} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 7}, .expr = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 7}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 7}, .expr = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 7}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 7}, .expr = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 7}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 7}, .expr = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 7}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 7}, .expr = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 7}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 7}, .expr = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 7}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 7}, .expr = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 7}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 7}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 7}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 7}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 7}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 7}}} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 2}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 3}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 4}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 5}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 6}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 7}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 7}}, .file = ast::FileId{.id = 7}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 1}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 1}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 1}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 1}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 1}} +1

Changes to relation INPUT_inputs::ExprNumber
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 1}, .value = 10} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 1}, .value = 1} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 1}, .value = 4} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 1}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 2}, .span = ast::Span{.start = 8, .end = 10}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 1}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 21, .end = 22}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 1}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 24, .end = 25}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 1}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 28, .end = 29}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 1}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 3}}}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 27, .end = 30}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 1}, .kind = ast::ExprSequence{.exprs = [ast::ExprId{.id = 1}, ast::ExprId{.id = 2}, ast::ExprId{.id = 4}]}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 21, .end = 30}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 1}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 5}}}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 20, .end = 31}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 7}, .file = ast::FileId{.id = 1}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 6}}}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 19, .end = 32}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 8}, .file = ast::FileId{.id = 1}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 12, .end = 32}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 1}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 1}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 1}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 1}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 1}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 3}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 1}} +1

Changes to relation INPUT_inputs::LetDecl
>> inputs::LetDecl{.stmt_id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 1}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "x", .span = ast::Span{.start = 4, .end = 5}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 0}}, .exported = false} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 1}, .value = "x"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 1}, .kind = ast::StmtLetDecl{}, .scope = ast::ScopeId{.id = 2}, .span = ast::Span{.start = 0, .end = 11}} +1
>> inputs::Statement{.id = ast::StmtId{.id = 1}, .file = ast::FileId{.id = 1}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 8}}}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 12, .end = 32}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 8}, .file = ast::FileId{.id = 1}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 7}}} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "x", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "x", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "x", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::Some{.x = ast::Span{.start = 4, .end = 5}}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .implicit = false, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "JSON", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "JSON", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "JSON", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "NaN", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "NaN", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "NaN", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Infinity", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Infinity", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Infinity", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "EvalError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "EvalError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "EvalError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int8Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int8Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int8Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Math", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Math", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Math", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Number", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Number", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Number", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int16Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int16Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Int16Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Float32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Map", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Map", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Map", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Object", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Object", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Object", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Promise", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Promise", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Promise", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Atomics", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Atomics", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Atomics", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Function", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Function", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Function", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Boolean", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Boolean", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Boolean", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "DataView", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "DataView", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "DataView", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Error", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Error", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Error", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Date", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Date", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Date", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "constructor", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "constructor", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "constructor", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "escape", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "escape", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "escape", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isFinite", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isFinite", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isFinite", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseFloat", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseFloat", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseFloat", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakSet", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakSet", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakSet", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURI", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURI", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURI", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURI", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURI", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURI", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Proxy", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Proxy", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Proxy", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakMap", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakMap", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakMap", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Set", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Set", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Set", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Symbol", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Symbol", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Symbol", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "URIError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "URIError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "URIError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isNaN", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isNaN", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "isNaN", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RegExp", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RegExp", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RegExp", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RangeError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RangeError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "RangeError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Reflect", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Reflect", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Reflect", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "TypeError", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "TypeError", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "TypeError", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "eval", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "eval", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "eval", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakRef", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakRef", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "WeakRef", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "globalThis", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "globalThis", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "globalThis", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "String", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "String", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "String", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseInt", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseInt", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "parseInt", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "unescape", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "unescape", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "unescape", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "valueOf", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "valueOf", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "valueOf", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toString", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toString", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "toString", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "undefined", .scope = ast::ScopeId{.id = 2}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "undefined", .scope = ast::ScopeId{.id = 3}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 1}, .name = "undefined", .scope = ast::ScopeId{.id = 4}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 8}, .expr = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 1}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 8}, .expr = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 1}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 8}, .expr = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 1}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 8}, .expr = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 1}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 8}, .expr = ast::ExprId{.id = 7}, .file = ast::FileId{.id = 1}} +1

Changes to relation outputs::unused_vars::VariableUsages
>> outputs::unused_vars::VariableUsages{.file = ast::FileId{.id = 1}, .name = "x", .scope = ast::ScopeId{.id = 3}, .declared_in = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 1}} +1
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 3}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 1}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 1}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 1}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 1}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 1}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 2}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 1}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 1}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 3}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 1}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 1}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 4}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 1}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 1}}} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 2}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 1}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 2}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 2}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 3}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 4}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 5}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 6}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 7}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 8}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 3}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 1}}, .file = ast::FileId{.id = 1}, .scope = ast::ScopeId{.id = 0}} +1

Changes to relation variable_decl::VariableDecl
>> variable_decl::VariableDecl{.stmt = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 1}, .kind = variable_decl::VarDeclLet{}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "x", .span = ast::Span{.start = 4, .end = 5}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 0}}, .exported = false} +1

Changes to relation INPUT_inputs::EveryScope
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 9}} +1
>> inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 9}} +1

Changes to relation INPUT_inputs::ExprNumber
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 9}, .value = 1} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 9}, .value = 2} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 9}, .value = 3} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 9}, .value = 1} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 9}, .value = 2} +1
>> inputs::ExprNumber{.expr_id = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 9}, .value = 3} +1

Changes to relation INPUT_inputs::Expression
>> inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 9}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 8, .end = 9}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 9}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 11, .end = 12}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 9}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 14, .end = 15}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 9}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 20, .end = 21}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 9}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 23, .end = 24}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 9}, .kind = ast::ExprLit{.kind = ast::LitNumber{}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 26, .end = 27}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 9}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 29, .end = 30}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 7}, .file = ast::FileId{.id = 9}, .kind = ast::ExprSequence{.exprs = [ast::ExprId{.id = 3}, ast::ExprId{.id = 4}, ast::ExprId{.id = 5}, ast::ExprId{.id = 6}]}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 20, .end = 30}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 8}, .file = ast::FileId{.id = 9}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 7}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 19, .end = 31}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 9}, .file = ast::FileId{.id = 9}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 8}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 18, .end = 32}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 10}, .file = ast::FileId{.id = 9}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 9}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 17, .end = 33}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 11}, .file = ast::FileId{.id = 9}, .kind = ast::ExprSequence{.exprs = [ast::ExprId{.id = 0}, ast::ExprId{.id = 1}, ast::ExprId{.id = 2}, ast::ExprId{.id = 10}]}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 8, .end = 33}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 12}, .file = ast::FileId{.id = 9}, .kind = ast::ExprGrouping{.inner = ddlog_std::Some{.x = ast::ExprId{.id = 11}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 7, .end = 34}} +1
>> inputs::Expression{.id = ast::ExprId{.id = 13}, .file = ast::FileId{.id = 9}, .kind = ast::ExprUnaryOp{}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 34}} +1

Changes to relation INPUT_inputs::File
>> inputs::File{.id = ast::FileId{.id = 9}, .kind = ast::JavaScript{.flavor = ast::Vanilla{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}} +1

Changes to relation INPUT_inputs::InputScope
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 9}} +1
>> inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 9}} +1

Changes to relation INPUT_inputs::NameRef
>> inputs::NameRef{.expr_id = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 9}, .value = "a"} +1

Changes to relation INPUT_inputs::Statement
>> inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 9}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 13}}}, .scope = ast::ScopeId{.id = 0}, .span = ast::Span{.start = 0, .end = 34}} +1

Changes to relation INPUT_inputs::UnaryOp
>> inputs::UnaryOp{.expr_id = ast::ExprId{.id = 13}, .file = ast::FileId{.id = 9}, .op = ddlog_std::Some{.x = ast::UnaryTypeof{}}, .expr = ddlog_std::Some{.x = ast::ExprId{.id = 12}}} +1

Changes to relation name_in_scope::NameInScope
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "FinalizationRegistry", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 11}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "JSON", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "JSON", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 19}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "NaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "NaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 22}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 0}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "ArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 1}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Float64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Float64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 13}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Infinity", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Infinity", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 15}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "EvalError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "EvalError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 10}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Int8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Int8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 18}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "BigInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "BigInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 3}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Math", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Math", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 21}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Int32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Int32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 17}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Number", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Number", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 23}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Int16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Int16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 16}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Float32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Float32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 12}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Map", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Map", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 20}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Object", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Object", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 24}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "BigUint64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 5}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Promise", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Promise", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 25}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Atomics", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Atomics", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 2}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "BigInt64Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 4}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Function", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Function", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 14}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Boolean", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Boolean", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 6}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "DataView", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "DataView", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 7}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Error", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Error", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 9}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Date", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Date", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 8}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "isPrototypeOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 56}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "constructor", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "constructor", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 45}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "escape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "escape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 50}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "isFinite", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "isFinite", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 54}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "parseFloat", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "parseFloat", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 57}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "WeakSet", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "WeakSet", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 44}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "encodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "encodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 48}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "decodeURI", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "decodeURI", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 46}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "SharedArrayBuffer", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 32}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "decodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 47}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Proxy", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Proxy", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 26}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "SyntaxError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 35}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "WeakMap", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "WeakMap", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 42}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Set", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Set", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 31}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Symbol", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Symbol", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 34}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "URIError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "URIError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 37}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "isNaN", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "isNaN", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 55}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "RegExp", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "RegExp", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 30}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Uint16Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 38}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "ReferenceError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 28}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "encodeURIComponent", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 49}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "hasOwnProperty", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 53}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "RangeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "RangeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 27}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Reflect", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Reflect", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 29}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "TypeError", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "TypeError", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 36}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Uint32Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 39}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "eval", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "eval", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 51}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "WeakRef", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "WeakRef", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 43}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Uint8ClampedArray", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 41}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "globalThis", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "globalThis", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 52}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "Uint8Array", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 40}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "String", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "String", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 33}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "parseInt", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "parseInt", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 58}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "unescape", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "unescape", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 63}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "toLocaleString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 60}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "valueOf", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "valueOf", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 64}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "propertyIsEnumerable", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 59}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "toString", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "toString", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 61}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "undefined", .scope = ast::ScopeId{.id = 0}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1
>> name_in_scope::NameInScope{.file = ast::FileId{.id = 9}, .name = "undefined", .scope = ast::ScopeId{.id = 1}, .span = ddlog_std::None{}, .declared_in = ast::AnyIdGlobal{.global = ast::GlobalId{.id = 62}}, .implicit = true, .is_arg = false} +1

Changes to relation outputs::typeof_undef::TypeofUndef
>> outputs::typeof_undef::TypeofUndef{.whole_expr = ast::ExprId{.id = 13}, .undefined_expr = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 9}} +1

Changes to relation outputs::typeof_undef::WithinTypeofExpr
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 13}, .expr = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 9}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 13}, .expr = ast::ExprId{.id = 7}, .file = ast::FileId{.id = 9}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 13}, .expr = ast::ExprId{.id = 8}, .file = ast::FileId{.id = 9}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 13}, .expr = ast::ExprId{.id = 9}, .file = ast::FileId{.id = 9}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 13}, .expr = ast::ExprId{.id = 10}, .file = ast::FileId{.id = 9}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 13}, .expr = ast::ExprId{.id = 11}, .file = ast::FileId{.id = 9}} +1
>> outputs::typeof_undef::WithinTypeofExpr{.type_of = ast::ExprId{.id = 13}, .expr = ast::ExprId{.id = 12}, .file = ast::FileId{.id = 9}} +1

Changes to relation scopes::ChildScope
>> scopes::ChildScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 9}} +1

Changes to relation scopes::FunctionLevelScope
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 0}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 9}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 9}}} +1
>> scopes::FunctionLevelScope{.scope = ast::ScopeId{.id = 1}, .nearest = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 9}, .id = ast::AnyIdFile{.file = ast::FileId{.id = 9}}} +1

Changes to relation scopes::ScopeOfId
>> scopes::ScopeOfId{.id = ast::AnyIdStmt{.stmt = ast::StmtId{.id = 0}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 0}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 1}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 2}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 3}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 4}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 5}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 6}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 7}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 8}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 9}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 10}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 11}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 12}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdExpr{.expr = ast::ExprId{.id = 13}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1
>> scopes::ScopeOfId{.id = ast::AnyIdFile{.file = ast::FileId{.id = 9}}, .file = ast::FileId{.id = 9}, .scope = ast::ScopeId{.id = 0}} +1

