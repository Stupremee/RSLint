============ FAILURE ============

=> Source:
import {
    UpdateEmpty, LoopContinues, X,
    EnsureCompletion, Evaluate, Q,
    GetValue, ToBoolean, Value,
    Completion, NormalCompletion,
} from '../bullshit.mjs';
function* LabelledEvaluation_IterationStatement_DoWhileStatement({ Statement, Expression }, labelSet) {
    // 1. Let V be undefined.
    let V = Value.undefined;
    // 2. Repeat,
    while (true) {
        // a. Let stmtResult be the result of evaluating Statement.
        const stmtResult = EnsureCompletion(yield* Evaluate(Statement));
        // b. If LoopContinues(stmtResult, labelSet) is false, return Completion(UpdateEmpty(stmtResult, V)).
        if (LoopContinues(stmtResult, labelSet) === Value.false) {
            return Completion(UpdateEmpty(stmtResult, V));
        }
        // c. If stmtResult.[[Value]] is not empty, set V to stmtResult.[[Value]].
        if (stmtResult.Value !== undefined) {
            V = stmtResult.Value;
        }
        // d. Let exprRef be the result of evaluating Expression.
        const exprRef = yield* Evaluate(Expression);
        // e. Let exprValue be ? GetValue(exprRef).
        const exprValue = Q(GetValue(exprRef));
        // f. If ! ToBoolean(exprValue) is false, return NormalCompletion(V).
        if (X(ToBoolean(exprValue)) === Value.false) {
            return NormalCompletion(V);
        }
    }
}

=> Expected:
[]

=> Got:
[
    NoUndef {
        var: "V",
        span: ast::Span{743,744},
        file: ast::FileId{51},
    },
    NoUndef {
        var: "V",
        span: ast::Span{899,900},
        file: ast::FileId{51},
    },
    NoUndef {
        var: "V",
        span: ast::Span{1319,1320},
        file: ast::FileId{51},
    },
    NoUnusedVars {
        var: "LabelledEvaluation_IterationStatement_DoWhileStatement",
        declared: ast::Span{181,235},
        file: ast::FileId{51},
    },
]

=> Inputs:
insert inputs::DotAccess[inputs::DotAccess{.expr_id = ast::ExprId{.id = 23}, .file = ast::FileId{.id = 51}, .object = ddlog_std::Some{.x = ast::ExprId{.id = 22}}, .prop = ddlog_std::Some{.x = ast::Spanned{.data = "Value", .span = ast::Span{.start = 864, .end = 869}}}}],
insert inputs::DotAccess[inputs::DotAccess{.expr_id = ast::ExprId{.id = 14}, .file = ast::FileId{.id = 51}, .object = ddlog_std::Some{.x = ast::ExprId{.id = 13}}, .prop = ddlog_std::Some{.x = ast::Spanned{.data = "false", .span = ast::Span{.start = 680, .end = 685}}}}],
insert inputs::DotAccess[inputs::DotAccess{.expr_id = ast::ExprId{.id = 45}, .file = ast::FileId{.id = 51}, .object = ddlog_std::Some{.x = ast::ExprId{.id = 44}}, .prop = ddlog_std::Some{.x = ast::Spanned{.data = "false", .span = ast::Span{.start = 1274, .end = 1279}}}}],
insert inputs::DotAccess[inputs::DotAccess{.expr_id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 51}, .object = ddlog_std::Some{.x = ast::ExprId{.id = 0}}, .prop = ddlog_std::Some{.x = ast::Spanned{.data = "undefined", .span = ast::Span{.start = 323, .end = 332}}}}],
insert inputs::DotAccess[inputs::DotAccess{.expr_id = ast::ExprId{.id = 28}, .file = ast::FileId{.id = 51}, .object = ddlog_std::Some{.x = ast::ExprId{.id = 27}}, .prop = ddlog_std::Some{.x = ast::Spanned{.data = "Value", .span = ast::Span{.start = 914, .end = 919}}}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 42}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 40}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 41}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 43}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 39}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 42}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 37}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 35}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 36}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 49}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 47}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 48}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 4}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 5}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 12}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 9}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 10}, ast::ExprId{.id = 11}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 20}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 17}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 18}, ast::ExprId{.id = 19}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 21}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 16}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 20}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 32}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 30}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 31}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 8}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 3}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 7}]}}],
insert inputs::Call[inputs::Call{.expr_id = ast::ExprId{.id = 38}, .file = ast::FileId{.id = 51}, .callee = ddlog_std::Some{.x = ast::ExprId{.id = 34}}, .args = ddlog_std::Some{.x = [ast::ExprId{.id = 37}]}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 7}, .file = ast::FileId{.id = 51}, .kind = ast::ExprYield{}, .scope = ast::ScopeId{.id = 9}, .span = ast::Span{.start = 483, .end = 509}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 42}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1242, .end = 1262}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 28}, .file = ast::FileId{.id = 51}, .kind = ast::ExprDot{}, .scope = ast::ScopeId{.id = 17}, .span = ast::Span{.start = 903, .end = 919}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 35}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 25}, .span = ast::Span{.start = 1130, .end = 1138}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 8}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 9}, .span = ast::Span{.start = 466, .end = 510}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 17}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 12}, .span = ast::Span{.start = 719, .end = 730}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 1}, .file = ast::FileId{.id = 51}, .kind = ast::ExprDot{}, .scope = ast::ScopeId{.id = 4}, .span = ast::Span{.start = 317, .end = 332}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 40}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1242, .end = 1251}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 49}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 28}, .span = ast::Span{.start = 1302, .end = 1321}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 26}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 17}, .span = ast::Span{.start = 899, .end = 900}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 33}, .file = ast::FileId{.id = 51}, .kind = ast::ExprYield{}, .scope = ast::ScopeId{.id = 22}, .span = ast::Span{.start = 1021, .end = 1048}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 10}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 10}, .span = ast::Span{.start = 648, .end = 658}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 19}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 12}, .span = ast::Span{.start = 743, .end = 744}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 38}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 25}, .span = ast::Span{.start = 1128, .end = 1148}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 9}, .span = ast::Span{.start = 466, .end = 482}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 24}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 15}, .span = ast::Span{.start = 874, .end = 883}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 9}, .span = ast::Span{.start = 490, .end = 498}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 47}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 28}, .span = ast::Span{.start = 1302, .end = 1318}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 29}, .file = ast::FileId{.id = 51}, .kind = ast::ExprAssign{}, .scope = ast::ScopeId{.id = 17}, .span = ast::Span{.start = 899, .end = 919}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 36}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 25}, .span = ast::Span{.start = 1139, .end = 1146}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 13}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 10}, .span = ast::Span{.start = 674, .end = 679}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 22}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 15}, .span = ast::Span{.start = 853, .end = 863}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 6}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 9}, .span = ast::Span{.start = 490, .end = 509}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 45}, .file = ast::FileId{.id = 51}, .kind = ast::ExprDot{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1268, .end = 1279}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 31}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 22}, .span = ast::Span{.start = 1037, .end = 1047}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 34}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 25}, .span = ast::Span{.start = 1128, .end = 1129}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 15}, .file = ast::FileId{.id = 51}, .kind = ast::ExprBinOp{}, .scope = ast::ScopeId{.id = 10}, .span = ast::Span{.start = 634, .end = 685}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 20}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 12}, .span = ast::Span{.start = 719, .end = 745}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 4}, .span = ast::Span{.start = 317, .end = 322}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 43}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1240, .end = 1263}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 48}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 28}, .span = ast::Span{.start = 1319, .end = 1320}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 25}, .file = ast::FileId{.id = 51}, .kind = ast::ExprBinOp{}, .scope = ast::ScopeId{.id = 15}, .span = ast::Span{.start = 853, .end = 883}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 32}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 22}, .span = ast::Span{.start = 1028, .end = 1048}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 9}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 10}, .span = ast::Span{.start = 634, .end = 647}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 18}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 12}, .span = ast::Span{.start = 731, .end = 741}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 51}, .kind = ast::ExprLit{.kind = ast::LitBool{}}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 363, .end = 367}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 41}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1252, .end = 1261}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 27}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 17}, .span = ast::Span{.start = 903, .end = 913}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 46}, .file = ast::FileId{.id = 51}, .kind = ast::ExprBinOp{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1240, .end = 1279}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 11}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 10}, .span = ast::Span{.start = 660, .end = 668}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 16}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 12}, .span = ast::Span{.start = 708, .end = 718}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 39}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1240, .end = 1241}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 12}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 10}, .span = ast::Span{.start = 634, .end = 669}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 21}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 12}, .span = ast::Span{.start = 708, .end = 746}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 9}, .span = ast::Span{.start = 499, .end = 508}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 44}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1268, .end = 1273}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 30}, .file = ast::FileId{.id = 51}, .kind = ast::ExprNameRef{}, .scope = ast::ScopeId{.id = 22}, .span = ast::Span{.start = 1028, .end = 1036}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 37}, .file = ast::FileId{.id = 51}, .kind = ast::ExprCall{}, .scope = ast::ScopeId{.id = 25}, .span = ast::Span{.start = 1130, .end = 1147}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 14}, .file = ast::FileId{.id = 51}, .kind = ast::ExprDot{}, .scope = ast::ScopeId{.id = 10}, .span = ast::Span{.start = 674, .end = 685}}],
insert inputs::Expression[inputs::Expression{.id = ast::ExprId{.id = 23}, .file = ast::FileId{.id = 51}, .kind = ast::ExprDot{}, .scope = ast::ScopeId{.id = 15}, .span = ast::Span{.start = 853, .end = 869}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 13}, .file = ast::FileId{.id = 51}, .name = "Float64Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 6}, .file = ast::FileId{.id = 51}, .name = "Boolean", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 27}, .file = ast::FileId{.id = 51}, .name = "RangeError", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 54}, .file = ast::FileId{.id = 51}, .name = "isFinite", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 39}, .file = ast::FileId{.id = 51}, .name = "Uint32Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 32}, .file = ast::FileId{.id = 51}, .name = "SharedArrayBuffer", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 29}, .file = ast::FileId{.id = 51}, .name = "Reflect", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 5}, .file = ast::FileId{.id = 51}, .name = "BigUint64Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 63}, .file = ast::FileId{.id = 51}, .name = "unescape", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 53}, .file = ast::FileId{.id = 51}, .name = "hasOwnProperty", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 52}, .file = ast::FileId{.id = 51}, .name = "globalThis", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 3}, .file = ast::FileId{.id = 51}, .name = "BigInt", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 35}, .file = ast::FileId{.id = 51}, .name = "SyntaxError", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 61}, .file = ast::FileId{.id = 51}, .name = "toString", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 14}, .file = ast::FileId{.id = 51}, .name = "Function", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 40}, .file = ast::FileId{.id = 51}, .name = "Uint8Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 45}, .file = ast::FileId{.id = 51}, .name = "constructor", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 2}, .file = ast::FileId{.id = 51}, .name = "Atomics", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 56}, .file = ast::FileId{.id = 51}, .name = "isPrototypeOf", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 25}, .file = ast::FileId{.id = 51}, .name = "Promise", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 23}, .file = ast::FileId{.id = 51}, .name = "Number", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 28}, .file = ast::FileId{.id = 51}, .name = "ReferenceError", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 21}, .file = ast::FileId{.id = 51}, .name = "Math", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 64}, .file = ast::FileId{.id = 51}, .name = "valueOf", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 44}, .file = ast::FileId{.id = 51}, .name = "WeakSet", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 37}, .file = ast::FileId{.id = 51}, .name = "URIError", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 30}, .file = ast::FileId{.id = 51}, .name = "RegExp", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 7}, .file = ast::FileId{.id = 51}, .name = "DataView", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 0}, .file = ast::FileId{.id = 51}, .name = "Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 11}, .file = ast::FileId{.id = 51}, .name = "FinalizationRegistry", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 8}, .file = ast::FileId{.id = 51}, .name = "Date", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 51}, .file = ast::FileId{.id = 51}, .name = "eval", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 31}, .file = ast::FileId{.id = 51}, .name = "Set", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 38}, .file = ast::FileId{.id = 51}, .name = "Uint16Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 47}, .file = ast::FileId{.id = 51}, .name = "decodeURIComponent", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 34}, .file = ast::FileId{.id = 51}, .name = "Symbol", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 4}, .file = ast::FileId{.id = 51}, .name = "BigInt64Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 60}, .file = ast::FileId{.id = 51}, .name = "toLocaleString", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 10}, .file = ast::FileId{.id = 51}, .name = "EvalError", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 18}, .file = ast::FileId{.id = 51}, .name = "Int8Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 58}, .file = ast::FileId{.id = 51}, .name = "parseInt", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 59}, .file = ast::FileId{.id = 51}, .name = "propertyIsEnumerable", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 26}, .file = ast::FileId{.id = 51}, .name = "Proxy", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 50}, .file = ast::FileId{.id = 51}, .name = "escape", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 41}, .file = ast::FileId{.id = 51}, .name = "Uint8ClampedArray", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 46}, .file = ast::FileId{.id = 51}, .name = "decodeURI", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 9}, .file = ast::FileId{.id = 51}, .name = "Error", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 55}, .file = ast::FileId{.id = 51}, .name = "isNaN", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 19}, .file = ast::FileId{.id = 51}, .name = "JSON", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 22}, .file = ast::FileId{.id = 51}, .name = "NaN", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 33}, .file = ast::FileId{.id = 51}, .name = "String", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 62}, .file = ast::FileId{.id = 51}, .name = "undefined", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 43}, .file = ast::FileId{.id = 51}, .name = "WeakRef", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 42}, .file = ast::FileId{.id = 51}, .name = "WeakMap", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 57}, .file = ast::FileId{.id = 51}, .name = "parseFloat", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 17}, .file = ast::FileId{.id = 51}, .name = "Int32Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 36}, .file = ast::FileId{.id = 51}, .name = "TypeError", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 49}, .file = ast::FileId{.id = 51}, .name = "encodeURIComponent", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 48}, .file = ast::FileId{.id = 51}, .name = "encodeURI", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 1}, .file = ast::FileId{.id = 51}, .name = "ArrayBuffer", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 20}, .file = ast::FileId{.id = 51}, .name = "Map", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 12}, .file = ast::FileId{.id = 51}, .name = "Float32Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 24}, .file = ast::FileId{.id = 51}, .name = "Object", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 16}, .file = ast::FileId{.id = 51}, .name = "Int16Array", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::ImplicitGlobal[inputs::ImplicitGlobal{.id = ast::GlobalId{.id = 15}, .file = ast::FileId{.id = 51}, .name = "Infinity", .privileges = ast::ReadonlyGlobal{}}],
insert inputs::FunctionArg[inputs::FunctionArg{.parent_func = ast::FuncId{.id = 0}, .file = ast::FileId{.id = 51}, .pattern = ast::ObjectPattern{.props = [ast::ObjSinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "Statement", .span = ast::Span{.start = 238, .end = 247}}}}, ast::ObjSinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "Expression", .span = ast::Span{.start = 249, .end = 259}}}}]}, .implicit = false}],
insert inputs::FunctionArg[inputs::FunctionArg{.parent_func = ast::FuncId{.id = 0}, .file = ast::FileId{.id = 51}, .pattern = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "labelSet", .span = ast::Span{.start = 263, .end = 271}}}}, .implicit = false}],
insert inputs::FunctionArg[inputs::FunctionArg{.parent_func = ast::FuncId{.id = 0}, .file = ast::FileId{.id = 51}, .pattern = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "arguments", .span = ast::Span{.start = 0, .end = 0}}}}, .implicit = true}],
insert inputs::BinOp[inputs::BinOp{.expr_id = ast::ExprId{.id = 46}, .file = ast::FileId{.id = 51}, .op = ddlog_std::Some{.x = ast::BinStrictEquality{}}, .lhs = ddlog_std::Some{.x = ast::ExprId{.id = 43}}, .rhs = ddlog_std::Some{.x = ast::ExprId{.id = 45}}}],
insert inputs::BinOp[inputs::BinOp{.expr_id = ast::ExprId{.id = 25}, .file = ast::FileId{.id = 51}, .op = ddlog_std::Some{.x = ast::BinStrictInequality{}}, .lhs = ddlog_std::Some{.x = ast::ExprId{.id = 23}}, .rhs = ddlog_std::Some{.x = ast::ExprId{.id = 24}}}],
insert inputs::BinOp[inputs::BinOp{.expr_id = ast::ExprId{.id = 15}, .file = ast::FileId{.id = 51}, .op = ddlog_std::Some{.x = ast::BinStrictEquality{}}, .lhs = ddlog_std::Some{.x = ast::ExprId{.id = 12}}, .rhs = ddlog_std::Some{.x = ast::ExprId{.id = 14}}}],
insert inputs::Return[inputs::Return{.stmt_id = ast::StmtId{.id = 7}, .file = ast::FileId{.id = 51}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 49}}}],
insert inputs::Return[inputs::Return{.stmt_id = ast::StmtId{.id = 1}, .file = ast::FileId{.id = 51}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 21}}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 3}, .child = ast::ScopeId{.id = 5}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 6}, .child = ast::ScopeId{.id = 7}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 20}, .child = ast::ScopeId{.id = 21}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 34}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 25}, .child = ast::ScopeId{.id = 26}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 10}, .child = ast::ScopeId{.id = 15}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 2}, .child = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 15}, .child = ast::ScopeId{.id = 16}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 16}, .child = ast::ScopeId{.id = 17}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 5}, .child = ast::ScopeId{.id = 6}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 26}, .child = ast::ScopeId{.id = 30}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 28}, .child = ast::ScopeId{.id = 29}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 27}, .child = ast::ScopeId{.id = 28}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 1}, .child = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 10}, .child = ast::ScopeId{.id = 11}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 24}, .child = ast::ScopeId{.id = 25}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 15}, .child = ast::ScopeId{.id = 20}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 3}, .child = ast::ScopeId{.id = 33}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 23}, .child = ast::ScopeId{.id = 24}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 0}, .child = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 22}, .child = ast::ScopeId{.id = 23}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 3}, .child = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 10}, .child = ast::ScopeId{.id = 14}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 12}, .child = ast::ScopeId{.id = 13}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 26}, .child = ast::ScopeId{.id = 31}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 9}, .child = ast::ScopeId{.id = 10}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 8}, .child = ast::ScopeId{.id = 9}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 15}, .child = ast::ScopeId{.id = 19}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 21}, .child = ast::ScopeId{.id = 22}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 11}, .child = ast::ScopeId{.id = 12}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 26}, .child = ast::ScopeId{.id = 27}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 17}, .child = ast::ScopeId{.id = 18}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 5}, .child = ast::ScopeId{.id = 32}, .file = ast::FileId{.id = 51}}],
insert inputs::InputScope[inputs::InputScope{.parent = ast::ScopeId{.id = 7}, .child = ast::ScopeId{.id = 8}, .file = ast::FileId{.id = 51}}],
insert inputs::Assign[inputs::Assign{.expr_id = ast::ExprId{.id = 29}, .file = ast::FileId{.id = 51}, .lhs = ddlog_std::Some{.x = ddlog_std::Right{.r = ast::ExprId{.id = 26}}}, .rhs = ddlog_std::Some{.x = ast::ExprId{.id = 28}}, .op = ddlog_std::Some{.x = ast::OpAssign{}}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 7}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 28}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 8}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 17}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 1}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 26}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 33}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 10}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 19}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 3}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 24}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 4}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 29}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 13}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 22}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 6}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 31}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 34}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 15}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 20}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 0}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 25}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 32}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 9}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 18}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 2}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 27}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 11}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 16}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 12}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 21}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 5}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 30}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 14}, .file = ast::FileId{.id = 51}}],
insert inputs::EveryScope[inputs::EveryScope{.scope = ast::ScopeId{.id = 23}, .file = ast::FileId{.id = 51}}],
insert inputs::ConstDecl[inputs::ConstDecl{.stmt_id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 51}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "stmtResult", .span = ast::Span{.start = 453, .end = 463}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 8}}, .exported = false}],
insert inputs::ConstDecl[inputs::ConstDecl{.stmt_id = ast::StmtId{.id = 5}, .file = ast::FileId{.id = 51}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "exprRef", .span = ast::Span{.start = 1011, .end = 1018}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 33}}, .exported = false}],
insert inputs::ConstDecl[inputs::ConstDecl{.stmt_id = ast::StmtId{.id = 6}, .file = ast::FileId{.id = 51}, .pattern = ddlog_std::Some{.x = ast::SinglePattern{.name = ddlog_std::Some{.x = ast::Spanned{.data = "exprValue", .span = ast::Span{.start = 1116, .end = 1125}}}}}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 38}}, .exported = false}],
insert inputs::File[inputs::File{.id = ast::FileId{.id = 51}, .kind = ast::JavaScript{.flavor = ast::Module{}}, .top_level_scope = ast::ScopeId{.id = 0}, .config = config::Config{.no_shadow = config::NoShadowConf{.enabled = true, .hoisting = config::HoistingNever{}}, .no_undef = true, .no_unused_labels = true, .typeof_undef = true, .unused_vars = true, .use_before_def = true}}],
insert inputs::ExprBool[inputs::ExprBool{.expr_id = ast::ExprId{.id = 2}, .file = ast::FileId{.id = 51}, .value = true}],
insert inputs::While[inputs::While{.stmt_id = ast::StmtId{.id = 9}, .file = ast::FileId{.id = 51}, .cond = ddlog_std::Some{.x = ast::ExprId{.id = 2}}, .body = ddlog_std::Some{.x = ast::StmtId{.id = 0}}}],
insert inputs::Yield[inputs::Yield{.expr_id = ast::ExprId{.id = 7}, .file = ast::FileId{.id = 51}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 6}}}],
insert inputs::Yield[inputs::Yield{.expr_id = ast::ExprId{.id = 33}, .file = ast::FileId{.id = 51}, .value = ddlog_std::Some{.x = ast::ExprId{.id = 32}}}],
insert inputs::ImportDecl[inputs::ImportDecl{.id = ast::ImportId{.id = 0}, .file = ast::FileId{.id = 51}, .clause = ast::GroupedImport{.imports = [ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "UpdateEmpty", .span = ast::Span{.start = 13, .end = 24}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "LoopContinues", .span = ast::Span{.start = 26, .end = 39}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "X", .span = ast::Span{.start = 41, .end = 42}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "EnsureCompletion", .span = ast::Span{.start = 48, .end = 64}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "Evaluate", .span = ast::Span{.start = 66, .end = 74}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "Q", .span = ast::Span{.start = 76, .end = 77}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "GetValue", .span = ast::Span{.start = 83, .end = 91}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "ToBoolean", .span = ast::Span{.start = 93, .end = 102}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "Value", .span = ast::Span{.start = 104, .end = 109}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "Completion", .span = ast::Span{.start = 115, .end = 125}}}, .alias = ddlog_std::None{}}, ast::NamedImport{.name = ddlog_std::Some{.x = ast::Spanned{.data = "NormalCompletion", .span = ast::Span{.start = 127, .end = 143}}}, .alias = ddlog_std::None{}}]}}],
insert inputs::Function[inputs::Function{.id = ast::FuncId{.id = 0}, .file = ast::FileId{.id = 51}, .name = ddlog_std::Some{.x = ast::Spanned{.data = "LabelledEvaluation_IterationStatement_DoWhileStatement", .span = ast::Span{.start = 181, .end = 235}}}, .scope = ast::ScopeId{.id = 1}, .body = ast::ScopeId{.id = 2}, .exported = false}],
insert inputs::If[inputs::If{.stmt_id = ast::StmtId{.id = 4}, .file = ast::FileId{.id = 51}, .cond = ddlog_std::Some{.x = ast::ExprId{.id = 25}}, .if_body = ddlog_std::Some{.x = ast::StmtId{.id = 3}}, .else_body = ddlog_std::None{}}],
insert inputs::If[inputs::If{.stmt_id = ast::StmtId{.id = 2}, .file = ast::FileId{.id = 51}, .cond = ddlog_std::Some{.x = ast::ExprId{.id = 15}}, .if_body = ddlog_std::Some{.x = ast::StmtId{.id = 1}}, .else_body = ddlog_std::None{}}],
insert inputs::If[inputs::If{.stmt_id = ast::StmtId{.id = 8}, .file = ast::FileId{.id = 51}, .cond = ddlog_std::Some{.x = ast::ExprId{.id = 46}}, .if_body = ddlog_std::Some{.x = ast::StmtId{.id = 7}}, .else_body = ddlog_std::None{}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 3}, .file = ast::FileId{.id = 51}, .kind = ast::StmtExpr{.expr_id = ddlog_std::Some{.x = ast::ExprId{.id = 29}}}, .scope = ast::ScopeId{.id = 17}, .span = ast::Span{.start = 899, .end = 920}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 7}, .file = ast::FileId{.id = 51}, .kind = ast::StmtReturn{}, .scope = ast::ScopeId{.id = 28}, .span = ast::Span{.start = 1295, .end = 1322}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 4}, .file = ast::FileId{.id = 51}, .kind = ast::StmtIf{}, .scope = ast::ScopeId{.id = 15}, .span = ast::Span{.start = 849, .end = 930}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 0}, .file = ast::FileId{.id = 51}, .kind = ast::StmtConstDecl{}, .scope = ast::ScopeId{.id = 9}, .span = ast::Span{.start = 447, .end = 511}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 8}, .file = ast::FileId{.id = 51}, .kind = ast::StmtIf{}, .scope = ast::ScopeId{.id = 26}, .span = ast::Span{.start = 1236, .end = 1332}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 5}, .file = ast::FileId{.id = 51}, .kind = ast::StmtConstDecl{}, .scope = ast::ScopeId{.id = 22}, .span = ast::Span{.start = 1005, .end = 1049}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 1}, .file = ast::FileId{.id = 51}, .kind = ast::StmtReturn{}, .scope = ast::ScopeId{.id = 12}, .span = ast::Span{.start = 701, .end = 747}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 9}, .file = ast::FileId{.id = 51}, .kind = ast::StmtWhile{}, .scope = ast::ScopeId{.id = 3}, .span = ast::Span{.start = 356, .end = 1338}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 6}, .file = ast::FileId{.id = 51}, .kind = ast::StmtConstDecl{}, .scope = ast::ScopeId{.id = 25}, .span = ast::Span{.start = 1110, .end = 1149}}],
insert inputs::Statement[inputs::Statement{.id = ast::StmtId{.id = 2}, .file = ast::FileId{.id = 51}, .kind = ast::StmtIf{}, .scope = ast::ScopeId{.id = 10}, .span = ast::Span{.start = 630, .end = 757}}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 9}, .file = ast::FileId{.id = 51}, .value = "LoopContinues"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 39}, .file = ast::FileId{.id = 51}, .value = "X"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 47}, .file = ast::FileId{.id = 51}, .value = "NormalCompletion"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 10}, .file = ast::FileId{.id = 51}, .value = "stmtResult"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 5}, .file = ast::FileId{.id = 51}, .value = "Statement"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 30}, .file = ast::FileId{.id = 51}, .value = "Evaluate"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 48}, .file = ast::FileId{.id = 51}, .value = "V"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 36}, .file = ast::FileId{.id = 51}, .value = "exprRef"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 22}, .file = ast::FileId{.id = 51}, .value = "stmtResult"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 31}, .file = ast::FileId{.id = 51}, .value = "Expression"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 34}, .file = ast::FileId{.id = 51}, .value = "Q"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 11}, .file = ast::FileId{.id = 51}, .value = "labelSet"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 35}, .file = ast::FileId{.id = 51}, .value = "GetValue"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 16}, .file = ast::FileId{.id = 51}, .value = "Completion"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 26}, .file = ast::FileId{.id = 51}, .value = "V"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 3}, .file = ast::FileId{.id = 51}, .value = "EnsureCompletion"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 18}, .file = ast::FileId{.id = 51}, .value = "stmtResult"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 41}, .file = ast::FileId{.id = 51}, .value = "exprValue"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 27}, .file = ast::FileId{.id = 51}, .value = "stmtResult"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 24}, .file = ast::FileId{.id = 51}, .value = "undefined"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 40}, .file = ast::FileId{.id = 51}, .value = "ToBoolean"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 0}, .file = ast::FileId{.id = 51}, .value = "Value"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 4}, .file = ast::FileId{.id = 51}, .value = "Evaluate"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 13}, .file = ast::FileId{.id = 51}, .value = "Value"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 17}, .file = ast::FileId{.id = 51}, .value = "UpdateEmpty"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 19}, .file = ast::FileId{.id = 51}, .value = "V"}],
insert inputs::NameRef[inputs::NameRef{.expr_id = ast::ExprId{.id = 44}, .file = ast::FileId{.id = 51}, .value = "Value"}],

=> Outputs:
Outputs {
    inner: InnerOutputs {
        typeof_undef: {
            outputs::typeof_undef::TypeofUndef{ast::ExprId{2},ast::ExprId{0},ast::FileId{15}}: 1,
            outputs::typeof_undef::TypeofUndef{ast::ExprId{1},ast::ExprId{0},ast::FileId{16}}: 1,
            outputs::typeof_undef::TypeofUndef{ast::ExprId{13},ast::ExprId{6},ast::FileId{21}}: 1,
            outputs::typeof_undef::TypeofUndef{ast::ExprId{1},ast::ExprId{0},ast::FileId{14}}: 1,
            outputs::typeof_undef::TypeofUndef{ast::ExprId{1},ast::ExprId{0},ast::FileId{17}}: 1,
            outputs::typeof_undef::TypeofUndef{ast::ExprId{7},ast::ExprId{0},ast::FileId{19}}: 1,
            outputs::typeof_undef::TypeofUndef{ast::ExprId{6},ast::ExprId{3},ast::FileId{20}}: 1,
            outputs::typeof_undef::TypeofUndef{ast::ExprId{1},ast::ExprId{0},ast::FileId{18}}: 1,
        },
        no_undef: {
            outputs::no_undef::NoUndef{"a",ast::ScopeId{0},ast::Span{2,3},ast::FileId{58}}: 1,
            outputs::no_undef::NoUndef{"V",ast::ScopeId{12},ast::Span{743,744},ast::FileId{51}}: 1,
            outputs::no_undef::NoUndef{"a",ast::ScopeId{0},ast::Span{0,1},ast::FileId{63}}: 1,
            outputs::no_undef::NoUndef{"a",ast::ScopeId{3},ast::Span{17,18},ast::FileId{62}}: 1,
            outputs::no_undef::NoUndef{"a",ast::ScopeId{0},ast::Span{5,6},ast::FileId{59}}: 1,
            outputs::no_undef::NoUndef{"V",ast::ScopeId{17},ast::Span{899,900},ast::FileId{51}}: 1,
            outputs::no_undef::NoUndef{"a",ast::ScopeId{6},ast::Span{24,25},ast::FileId{61}}: 1,
            outputs::no_undef::NoUndef{"require",ast::ScopeId{0},ast::Span{0,7},ast::FileId{56}}: 1,
            outputs::no_undef::NoUndef{"b",ast::ScopeId{2},ast::Span{15,16},ast::FileId{54}}: 1,
            outputs::no_undef::NoUndef{"a",ast::ScopeId{0},ast::Span{1,2},ast::FileId{57}}: 1,
            outputs::no_undef::NoUndef{"window",ast::ScopeId{0},ast::Span{0,6},ast::FileId{55}}: 1,
            outputs::no_undef::NoUndef{"b",ast::ScopeId{5},ast::Span{27,28},ast::FileId{60}}: 1,
            outputs::no_undef::NoUndef{"V",ast::ScopeId{28},ast::Span{1319,1320},ast::FileId{51}}: 1,
            outputs::no_undef::NoUndef{"b",ast::ScopeId{2},ast::Span{8,9},ast::FileId{53}}: 1,
            outputs::no_undef::NoUndef{"a",ast::ScopeId{0},ast::Span{0,1},ast::FileId{52}}: 1,
        },
        use_before_def: {},
        unused_variables: {
            outputs::unused_vars::UnusedVariables{"myFunc",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,15},ast::FileId{24}}: 1,
            outputs::unused_vars::UnusedVariables{"f",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,10},ast::FileId{41}}: 1,
            outputs::unused_vars::UnusedVariables{"f",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,10},ast::FileId{1}}: 1,
            outputs::unused_vars::UnusedVariables{"Bar",ast::AnyIdClass{ast::ClassId{0}},ast::Span{15,18},ast::FileId{26}}: 1,
            outputs::unused_vars::UnusedVariables{"f",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{16,17},ast::FileId{6}}: 1,
            outputs::unused_vars::UnusedVariables{"f",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,10},ast::FileId{4}}: 1,
            outputs::unused_vars::UnusedVariables{"b",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,10},ast::FileId{62}}: 1,
            outputs::unused_vars::UnusedVariables{"toString",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{4,12},ast::FileId{23}}: 1,
            outputs::unused_vars::UnusedVariables{"b",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{25,26},ast::FileId{22}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{4,5},ast::FileId{53}}: 1,
            outputs::unused_vars::UnusedVariables{"b",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{4,5},ast::FileId{43}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{4,5},ast::FileId{31}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{19,20},ast::FileId{61}}: 1,
            outputs::unused_vars::UnusedVariables{"evilEval",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,17},ast::FileId{13}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{14,15},ast::FileId{63}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{22,23},ast::FileId{22}}: 1,
            outputs::unused_vars::UnusedVariables{"f",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{12,13},ast::FileId{2}}: 1,
            outputs::unused_vars::UnusedVariables{"f",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,10},ast::FileId{40}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{4,5},ast::FileId{29}}: 1,
            outputs::unused_vars::UnusedVariables{"LabelledEvaluation_IterationStatement_DoWhileStatement",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{181,235},ast::FileId{51}}: 1,
            outputs::unused_vars::UnusedVariables{"f",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,10},ast::FileId{54}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdStmt{ast::StmtId{1}},ast::Span{19,20},ast::FileId{60}}: 1,
            outputs::unused_vars::UnusedVariables{"c",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{6,7},ast::FileId{60}}: 1,
            outputs::unused_vars::UnusedVariables{"foo",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,12},ast::FileId{22}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{4,5},ast::FileId{30}}: 1,
            outputs::unused_vars::UnusedVariables{"bacon",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{6,11},ast::FileId{46}}: 1,
            outputs::unused_vars::UnusedVariables{"A",ast::AnyIdClass{ast::ClassId{0}},ast::Span{6,7},ast::FileId{45}}: 1,
            outputs::unused_vars::UnusedVariables{"b",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{9,10},ast::FileId{61}}: 1,
            outputs::unused_vars::UnusedVariables{"b",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{4,5},ast::FileId{16}}: 1,
            outputs::unused_vars::UnusedVariables{"a",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{11,12},ast::FileId{62}}: 1,
            outputs::unused_vars::UnusedVariables{"b",ast::AnyIdFunc{ast::FuncId{0}},ast::Span{12,13},ast::FileId{63}}: 1,
            outputs::unused_vars::UnusedVariables{"warn",ast::AnyIdStmt{ast::StmtId{0}},ast::Span{47,51},ast::FileId{28}}: 1,
        },
        no_shadow: {},
        no_unused_labels: {},
        output_file: Mutex {
            data: Some(
                File {
                    handle: 0x00000000000000d0,
                    path: "\\\\?\\G:\\Users\\Chase\\Code\\Rust\\RSLint\\crates\\rslint_scope\\output.log\\no_undef",
                },
            ),
        },
    },
}

============ END FAILURE ============

