digraph {
    0 [label=Array];
    1 [label=Arrow];
    2 [label=ArrowParam];
    3 [label=Assign];
    4 [label=Await];
    5 [label=BinOp];
    6 [label=BracketAccess];
    7 [label=Break];
    8 [label=Call];
    9 [label=ChildScope];
    10 [label=Class];
    11 [label=ClassExpr];
    12 [label=ClosestFunction];
    13 [label=ConstDecl];
    14 [label=Continue];
    15 [label=DoWhile];
    16 [label=DotAccess];
    17 [label=EveryScope];
    18 [label=ExprBigInt];
    19 [label=ExprBool];
    20 [label=ExprNumber];
    21 [label=ExprString];
    22 [label=Expression];
    23 [label=For];
    24 [label=ForIn];
    25 [label=Function];
    26 [label=FunctionArg];
    27 [label=INPUT_Array];
    28 [label=INPUT_Arrow];
    29 [label=INPUT_ArrowParam];
    30 [label=INPUT_Assign];
    31 [label=INPUT_Await];
    32 [label=INPUT_BinOp];
    33 [label=INPUT_BracketAccess];
    34 [label=INPUT_Break];
    35 [label=INPUT_Call];
    36 [label=INPUT_Class];
    37 [label=INPUT_ClassExpr];
    38 [label=INPUT_ConstDecl];
    39 [label=INPUT_Continue];
    40 [label=INPUT_DoWhile];
    41 [label=INPUT_DotAccess];
    42 [label=INPUT_EveryScope];
    43 [label=INPUT_ExprBigInt];
    44 [label=INPUT_ExprBool];
    45 [label=INPUT_ExprNumber];
    46 [label=INPUT_ExprString];
    47 [label=INPUT_Expression];
    48 [label=INPUT_For];
    49 [label=INPUT_ForIn];
    50 [label=INPUT_Function];
    51 [label=INPUT_FunctionArg];
    52 [label=INPUT_If];
    53 [label=INPUT_ImplicitGlobal];
    54 [label=INPUT_InlineFunc];
    55 [label=INPUT_InlineFuncParam];
    56 [label=INPUT_InputScope];
    57 [label=INPUT_Label];
    58 [label=INPUT_LetDecl];
    59 [label=INPUT_NameRef];
    60 [label=INPUT_New];
    61 [label=INPUT_Property];
    62 [label=INPUT_Return];
    63 [label=INPUT_Statement];
    64 [label=INPUT_Switch];
    65 [label=INPUT_SwitchCase];
    66 [label=INPUT_Template];
    67 [label=INPUT_Ternary];
    68 [label=INPUT_Throw];
    69 [label=INPUT_Try];
    70 [label=INPUT_UnaryOp];
    71 [label=INPUT_VarDecl];
    72 [label=INPUT_While];
    73 [label=INPUT_With];
    74 [label=INPUT_Yield];
    75 [label=If];
    76 [label=ImplicitGlobal];
    77 [label=InlineFunc];
    78 [label=InlineFuncParam];
    79 [label=InputScope];
    80 [label=InvalidNameUse];
    81 [label=Label];
    82 [label=LetDecl];
    83 [label=NameInScope];
    84 [label=NameRef];
    85 [label=New];
    86 [label=Property];
    87 [label=Return];
    88 [label=Statement];
    89 [label=Switch];
    90 [label=SwitchCase];
    91 [label=Template];
    92 [label=Ternary];
    93 [label=Throw];
    94 [label=Try];
    95 [label=UnaryOp];
    96 [label=VarDecl];
    97 [label=VarUseBeforeDeclaration];
    98 [label=While];
    99 [label=With];
    100 [label=Yield];
    0 -> 27;
    1 -> 28;
    1 -> 83;
    1 -> 83;
    2 -> 29;
    2 -> 83;
    2 -> 83;
    3 -> 30;
    4 -> 31;
    5 -> 32;
    6 -> 33;
    7 -> 34;
    8 -> 35;
    9 -> 12;
    9 -> 83;
    9 -> 97;
    10 -> 36;
    10 -> 83;
    11 -> 37;
    12 -> 83;
    13 -> 38;
    13 -> 83;
    14 -> 39;
    15 -> 40;
    16 -> 41;
    17 -> 42;
    17 -> 83;
    18 -> 43;
    19 -> 44;
    20 -> 45;
    21 -> 46;
    22 -> 47;
    22 -> 80;
    22 -> 83;
    22 -> 83;
    22 -> 97;
    23 -> 48;
    24 -> 49;
    25 -> 12;
    25 -> 12;
    25 -> 50;
    25 -> 83;
    25 -> 83;
    25 -> 83;
    26 -> 51;
    26 -> 83;
    75 -> 52;
    76 -> 53;
    76 -> 83;
    77 -> 54;
    77 -> 83;
    77 -> 83;
    78 -> 55;
    78 -> 83;
    79 -> 9;
    79 -> 9;
    79 -> 9;
    79 -> 56;
    81 -> 57;
    82 -> 58;
    82 -> 83;
    83 -> 80;
    83 -> 83;
    83 -> 97;
    84 -> 59;
    84 -> 80;
    84 -> 97;
    85 -> 60;
    86 -> 61;
    87 -> 62;
    88 -> 63;
    88 -> 83;
    88 -> 83;
    88 -> 83;
    88 -> 83;
    88 -> 83;
    88 -> 97;
    89 -> 64;
    90 -> 65;
    91 -> 66;
    92 -> 67;
    93 -> 68;
    94 -> 69;
    95 -> 70;
    96 -> 71;
    96 -> 83;
    98 -> 72;
    99 -> 73;
    100 -> 74;
}